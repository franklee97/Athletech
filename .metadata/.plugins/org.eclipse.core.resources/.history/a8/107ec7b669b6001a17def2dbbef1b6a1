#include "stm32l4xx_hal.h"

#define LSM6DSM_ACC_GYRO_WHO_AM_I         0x6A
#define LSM6DSM_ACC_GYRO_I2C_ADDRESS_HIGH  0xD6  // SAD[0] = 1
#define SENSORTILE_LSM6DSM_SPI_CS_Port	          GPIOB
#define SENSORTILE_LSM6DSM_SPI_CS_Pin     	  GPIO_PIN_12
#define SENSORTILE_LSM6DSM_SPI_CS_GPIO_CLK_ENABLE()  __GPIOB_CLK_ENABLE()
#define SENSORTILE_SENSORS_SPI                    SPI2

#define SENSORTILE_SENSORS_SPI_Port               GPIOB
#define SENSORTILE_SENSORS_SPI_MOSI_Pin           GPIO_PIN_15
#define SENSORTILE_SENSORS_SPI_SCK_Pin            GPIO_PIN_13

#define SENSORTILE_SENSORS_SPI_CLK_ENABLE()       __SPI2_CLK_ENABLE()
#define SENSORTILE_SENSORS_SPI_GPIO_CLK_ENABLE()  __GPIOB_CLK_ENABLE()

extern uint8_t Sensor_IO_Write(void *handle, uint8_t WriteAddr,
		uint8_t *pBuffer, uint16_t nBytesToWrite);
uint8_t Sensor_IO_SPI_Write(void *handle, uint8_t WriteAddr, uint8_t *pBuffer,
		uint16_t nBytesToWrite);
void SPI_Write(SPI_HandleTypeDef* xSpiHandle, uint8_t val);
extern uint8_t Sensor_IO_Read(void *handle, uint8_t ReadAddr, uint8_t *pBuffer,
		uint16_t nBytesToRead);
uint8_t Sensor_IO_SPI_Read(void *handle, uint8_t ReadAddr, uint8_t *pBuffer,
		uint16_t nBytesToRead);
void SPI_Read_nBytes(SPI_HandleTypeDef* xSpiHandle, uint8_t *val,
		uint16_t nBytesToRead);
void SPI_Read(SPI_HandleTypeDef* xSpiHandle, uint8_t *val);
uint8_t Sensor_IO_SPI_CS_Enable(void *handle);
uint8_t Sensor_IO_SPI_CS_Disable(void *handle);
